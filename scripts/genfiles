#!/bin/bash

##############################################################################
#
# gentsv (c) 2019 duncan brown (http://github.com/xovox/OpenArcadeDB
#
# This is a simple script to demonstrate a single type of usefullness of the
# OpenArcadeDB.  It generates a .tsv file to stdout that's suitable for
# importing to many spreadsheet applications.
#
# Is it ugly?  Yes.  Does it work?  Most of the time.  Is it slow?  Not as
# much as the first generation.  I run this once every few months, and only if
# I have new data to add into the database so speed & elegance aren't at the
# top of my list
#
# What do you want for free?
#   -- Ilsundal, 1995
#
##############################################################################

required_packages="
dos2unix
sqlite3
"

arcade_columns="
game.name
game.name.short
game.publisher
game.year
game.genre
game.romof
game.bios
game.cloneof
game.coinslots
game.control.buttons
game.control.count
game.control.type
game.mature
monitor.count
monitor.freq
monitor.orientation
monitor.ratio.horizontal
monitor.ratio.vertical
monitor.resolution.horizontal
monitor.resolution.vertical
monitor.type
"


# sqlite doesn't like dots in column names
arcade_sqlite_columns="$(sed 's/\./_/g' <<< "$arcade_columns")"

# column types for sqlite
declare -A arcade_sqlite_column_type="(
[game_rom]="text"
[game_name]="text"
[game_name_short]="text"
[game_publisher]="text"
[game_year]="int"
[game_genre]="text"
[game_romof]="text"
[game_bios]="text"
[game_cloneof]="text"
[game_coinslots]="int"
[game_control_buttons]="int"
[game_control_count]="int"
[game_control_type]="text"
[game_mature]="text"
[monitor_count]="int"
[monitor_freq]="real"
[monitor_orientation]="text"
[monitor_ratio_horizontal]="int"
[monitor_ratio_vertical]="int"
[monitor_resolution_horizontal]="int"
[monitor_resolution_vertical]="int"
[monitor_type]="text"
)"



geninfo() {
    echo -n "$game	"
    for field in $arcade_columns ; do
        echo -n "$(cat "$game/$field" 2> /dev/null)	"
    done
    echo
}

if ! dpkg -l $required_packages > /dev/null; then
    sudo apt update
    sudo apt -y install $required_packages
fi

today=$(date +%Y%m%d_%H%M)

tempdir=$(mktemp -d /dev/shm/OpenArcade-XXX)
targetdir=$PWD/OpenArcadeDB.$today
mkdir -pv $targetdir
clearline="$(tput el)"

##############################################################################
echo "gathering arcade information"
##############################################################################

gamecount="$(find arcade -mindepth 1 -maxdepth 1 | wc -l)"
gamenum=0
pushd arcade
for game in * ; do
    gamenum=$[ $gamenum + 1 ]
    echo -en "$clearline ($gamenum/$gamecount | $[ ${gamenum}00 / $gamecount ]%)	$game\r"
    geninfo > $tempdir/$game &
    while [ "$(jobs | wc -l)" -ge 100 ]; do
        sleep 1
    done
done

echo


##############################################################################
echo "assembling arcade tsv base"
##############################################################################

cat $tempdir/* \
    | sort \
    | sed 's/	$//' \
        > $targetdir/OpenArcadeDB_Linux.tsv.tmp

##############################################################################
echo "generating arcade db table"
##############################################################################

{
    echo -n "create table arcade ("
    for column in game_rom $arcade_sqlite_columns ; do
        echo -n "$column ${arcade_sqlite_column_type[$column]}	"
    done | sed 's/	$//;s/	/, /g'
    echo ");"
cat << EOF
.separator "\t"
.import $targetdir/OpenArcadeDB_Linux.tsv.tmp arcade
EOF
} | sqlite3 $targetdir/OpenArcadeDB.sqlite3


##############################################################################
echo "inserting arcade history"
##############################################################################

{
cat << EOF
create table history (game_rom text, game_history text);
EOF

for game in $(find $HOME/git/OpenArcadeDB/arcade -name game.history | cut -d'/' -f7 | sort) ; do

cat << EOF 
insert into history values("$game", "$(cat $HOME/git/OpenArcadeDB/arcade/$game/game.history)");
EOF

done
} | sqlite3 $targetdir/OpenArcadeDB.sqlite3

##############################################################################
echo "assembling final tsv"
##############################################################################

{
echo $game.rom $arcade_columns | sed 's/ /	/g'
cat $targetdir/OpenArcadeDB_Linux.tsv.tmp 
} > $targetdir/OpenArcadeDB_Linux.tsv

##############################################################################
echo "generating line by line breakdown"
##############################################################################

egrep -ris . * | sed 's/:/	/' | column -t -s'	' > $targetdir/OpenArcadeDB_Linux.txt

# generating dos friendly versions
unix2dos < $targetdir/OpenArcadeDB_Linux.tsv > $targetdir/OpenArcadeDB_DOS.tsv
unix2dos < $targetdir/OpenArcadeDB_Linux.txt > $targetdir/OpenArcadeDB_DOS.txt
popd

##############################################################################
echo "cleanup"
##############################################################################

rm -rf $tempdir $targetdir/*tmp
#echo "Obtained from https://github.com/xovox/OpenArcadeDB" > $targetdir/README.txt

exit
